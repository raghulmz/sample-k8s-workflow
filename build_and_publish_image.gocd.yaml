format_version: 3
pipelines:
  build_publish_test_deploy:
    group: sample
    label_template: ${COUNT}
    lock_behavior: unlockWhenFinished
    display_order: 1
    environment_variables:
      DOCKERHUB_ORG: gocddemo
      DOCKERHUB_USERNAME: raghulmz
    materials:
      git:
        git: https://github.com/gocd-demo/node-bulletin-board.git
        shallow_clone: true
        auto_update: true
        branch: master
    stages:
    - build_and_publish_image:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
        jobs:
          build_image:
            timeout: 0
            elastic_profile_id: profile_dind_agents
            artifacts:
            - external:
                id: bulletin-board
                store_id: dockerhub
                configuration:
                  options:
                    Image: ${DOCKERHUB_USERNAME}/bulletin-board
                    Tag: ${GO_PIPELINE_LABEL}
            tasks:
            - exec:
                arguments:
                - -c
                - docker build -t $DOCKERHUB_USERNAME/bulletin-board:$GO_PIPELINE_LABEL . -f Dockerfile.application
                command: /bin/bash
                run_if: passed
    - test_app_image:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
        jobs:
          test_app_image:
            timeout: 0
            elastic_profile_id: profile_dind_agents
            tasks:
            - fetch:
                artifact_id: bulletin-board
                stage: build_and_publish_image
                job: build_image
                artifact_origin: external
                run_if: passed
            - exec:
                  arguments:
                  - -c
                  - echo "${DOCKERHUB_USERNAME}/bulletin-board:${GO_PIPELINE_LABEL}" && docker run ${DOCKERHUB_USERNAME}/bulletin-board:${GO_PIPELINE_LABEL} npm test
                  command: /bin/bash
                  run_if: passed
    - deploy_to_cluster:
        fetch_materials: true
        keep_artifacts: false
        clean_workspace: false
        approval:
          type: success
        jobs:
          Deploy:
            timeout: 0
            elastic_profile_id: profile_dind_agents
            tasks:
            - fetch:
                options:
                  EnvironmentVariablePrefix: ''
                  SkipImagePulling: 'true'
                artifact_id: bulletin-board
                stage: build_and_publish_image
                job: build_image
                artifact_origin: external
                run_if: passed
            - exec:
                arguments:
                command: GO_DEPENDENCY_LABEL_UPSTREAM=${GO_PIPELINE_LABEL} ./app-deployment.sh
                run_if: passed
